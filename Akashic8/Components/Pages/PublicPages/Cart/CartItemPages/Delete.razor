@page "/cartitems/delete"
@using Microsoft.EntityFrameworkCore
@using Akashic8.Domain
@inject IDbContextFactory<Akashic8.Data.Akashic8Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>CartItem</h2>
    <hr />
    @if (cartitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@cartitem.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookId</dt>
            <dd class="col-sm-10">@cartitem.BookId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookName</dt>
            <dd class="col-sm-10">@cartitem.BookName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@cartitem.Price</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@cartitem.Quantity</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AddedAt</dt>
            <dd class="col-sm-10">@cartitem.AddedAt</dd>
        </dl>
        <EditForm method="post" Model="cartitem" OnValidSubmit="DeleteCartItem" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(cartitem is null)">Delete</button> |
            <a href="/cartitems">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private CartItem? cartitem;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        cartitem = await context.CartItem.FirstOrDefaultAsync(m => m.Id == Id);

        if (cartitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCartItem()
    {
        using var context = DbFactory.CreateDbContext();
        context.CartItem.Remove(cartitem!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/cartitems");
    }
}
