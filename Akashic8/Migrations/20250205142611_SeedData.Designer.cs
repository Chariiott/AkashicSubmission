// <auto-generated />
using System;
using Akashic8.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Akashic8.Migrations
{
    [DbContext(typeof(Akashic8Context))]
    [Migration("20250205142611_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Akashic8.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6325),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6338),
                            Name = "Harper Lee",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6342),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6342),
                            Name = "J.R.R. Tolkien",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6344),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6344),
                            Name = "Herman Melville",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6345),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6346),
                            Name = "J.K. Rowling",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Akashic8.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6795),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6796),
                            Description = "A novel by Harper Lee",
                            GenreId = 1,
                            ISBN = "978-0-06-112008-4",
                            ImageUrl = "/images/To Kill A Mockingbird.jpg",
                            LanguageId = 1,
                            Name = "To Kill A Mockingbird",
                            Price = 12.99,
                            Quantity = 10,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6798),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6799),
                            Description = "A novel by J.R.R. Tolkien",
                            GenreId = 9,
                            ISBN = "978-0-21-102080-4",
                            ImageUrl = "/images/The Hobbit.jpg",
                            LanguageId = 1,
                            Name = "The Hobbit",
                            Price = 15.99,
                            Quantity = 3,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6801),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6802),
                            Description = "A novel by Herman Melville",
                            GenreId = 1,
                            ISBN = "978-0-43-265346-1",
                            ImageUrl = "/images/Moby Dick.jpg",
                            LanguageId = 1,
                            Name = "Moby-Dick",
                            Price = 11.5,
                            Quantity = 17,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6804),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6805),
                            Description = "A novel by J.K. Rowling",
                            GenreId = 9,
                            ISBN = "978-0-43-265346-1",
                            ImageUrl = "/images/Harry Potter and The Sorcerer's Stone.jpg",
                            LanguageId = 1,
                            Name = "Harry Potter and the Sorcerer's Stone",
                            Price = 18.989999999999998,
                            Quantity = 34,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Akashic8.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Akashic8.Domain.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6534),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6535),
                            Name = "Fiction",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6537),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6537),
                            Name = "Romance",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6539),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6539),
                            Name = "Mystery",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6540),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6541),
                            Name = "Horror",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6542),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6542),
                            Name = "Cereal Killer Thriller",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6543),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6544),
                            Name = "Non-fiction",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6545),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6546),
                            Name = "Graphic Novel",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6547),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6547),
                            Name = "Crime",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6548),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6549),
                            Name = "Fantasy",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Akashic8.Domain.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6703),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6704),
                            Name = "English",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6706),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6707),
                            Name = "Chinese",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6708),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6708),
                            Name = "Malay",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6710),
                            DateUpdated = new DateTime(2025, 2, 5, 22, 26, 10, 402, DateTimeKind.Local).AddTicks(6710),
                            Name = "Tamil",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Akashic8.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
